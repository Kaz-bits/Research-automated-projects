# Packages
library(ggplot2)
library(patchwork)
# Packages
library(ggplot2)
library(patchwork)
# Load data
temp <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Remove columns
temp <- temp[, c(1:3)]
# Add values of SED1
temp[189, ] <- c(201, 0.4463541487, 0.04946139798)
# Change construct name
temp_name <- ifelse(nchar(temp$Construct) == 1, yes = paste0("00",temp$Construct),
no = ifelse(nchar(temp$Construct) == 2, yes = paste0("0", temp$Construct),
no = temp$Construct))
# Add column with the names of the constructs
temp$Construct <- temp_name
# Convert as a factor the column of interest
temp$Construct <- factor(temp$Construct, levels = temp$Construct)
# Plot
i1 <- ggplot(data = temp[1:94, ], aes(x = delta, y = reoder(Construct, delta))) +
geom_vline(xintercept = unname(quantile(temp$delta)[2]),
lty = 2) +
geom_vline(xintercept = median(temp$delta),
lty = 2, color = "blue") +
geom_vline(xintercept = unname(quantile(temp$delta)[4]),
lty = 2) +
geom_point(data = temp[1:94, ], aes(x = delta,
y = as.factor(Construct)),
size = 4, shape = 21,
fill = "white", stroke = 1.5) +
geom_errorbar(data = temp[1:94, ], aes(x = delta,
y = as.factor(Construct),
xmin = delta - sd_delta,
xmax = delta + sd_delta), width = 0.2) +
labs(x = expression(Delta * FRET [1.5 * " M - " * 0 * " M"]),
y = "IDR") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 90, vjust = 0.5),
axis.text = element_text(size = 12),
panel.grid = element_blank()) +
coord_flip(xlim = c(-0.4,2))
i1
# Save plot
ggsave(plot = i1, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_001_106.pdf",
device = "pdf",
width = 30, height = 5, units = "in", dpi = 450)
ggsave(plot = i1, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_001_106.pdf",
device = "png",
width = 30, height = 5, units = "in", dpi = 450)
i2 <- ggplot(data = temp[95:nrow(temp), ]) +
geom_vline(xintercept = unname(quantile(temp$delta)[2]),
lty = 2) +
geom_vline(xintercept = median(temp$delta),
lty = 2, color = "blue") +
geom_vline(xintercept = unname(quantile(temp$delta)[4]),
lty = 2) +
geom_point(data = temp[95:nrow(temp), ], aes(x = delta,
y = as.factor(Construct)),
size = 4, shape = 21,
fill = "white", stroke = 1.5) +
geom_point(data = temp[temp$Construct == "201", ], aes(x = delta,
y = as.factor(Construct)),
size = 4, shape = 21,
fill = "white", color = "blue", stroke = 1.5) +
geom_errorbar(data = temp[95:nrow(temp), ], aes(x = delta,
y = as.factor(Construct),
xmin = delta - sd_delta,
xmax = delta + sd_delta), width = 0.2) +
geom_errorbar(data = temp[temp$Construct == "201", ], aes(x = delta,
y = as.factor(Construct),
xmin = delta - sd_delta,
xmax = delta + sd_delta), width = 0.2, color = "blue") +
labs(x = expression(Delta * FRET [1.5 * " M - " * 0 * " M"]),
y = "IDR") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5),
panel.grid = element_blank()) +
coord_flip(xlim = c(-0.4,2))
i2
# Merge plots
b <- i1  / i2
b
# Packages
library(ggplot2)
library(patchwork)
# Load data
temp <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Remove columns
temp <- temp[, c(1:3)]
# Add values of SED1
temp[189, ] <- c(201, 0.4463541487, 0.04946139798)
# Change construct name
temp_name <- ifelse(nchar(temp$Construct) == 1, yes = paste0("00",temp$Construct),
no = ifelse(nchar(temp$Construct) == 2, yes = paste0("0", temp$Construct),
no = temp$Construct))
# Add column with the names of the constructs
temp$Construct <- temp_name
# Convert as a factor the column of interest
temp$Construct <- factor(temp$Construct, levels = temp$Construct)
# Plot
i1 <- ggplot(data = temp[1:94, ], aes(x = delta, y = reoder(Construct, delta))) +
geom_vline(xintercept = unname(quantile(temp$delta)[2]),
lty = 2) +
geom_vline(xintercept = median(temp$delta),
lty = 2, color = "blue") +
geom_vline(xintercept = unname(quantile(temp$delta)[4]),
lty = 2) +
geom_point(data = temp[1:94, ], aes(x = delta,
y = as.factor(Construct)),
size = 4, shape = 21,
fill = "white", stroke = 1.5) +
geom_errorbar(data = temp[1:94, ], aes(x = delta,
y = as.factor(Construct),
xmin = delta - sd_delta,
xmax = delta + sd_delta), width = 0.2) +
labs(x = expression(Delta * FRET [1.5 * " M - " * 0 * " M"]),
y = "IDR") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text.x = element_text(angle = 90, vjust = 0.5),
axis.text = element_text(size = 12),
panel.grid = element_blank()) +
coord_flip(xlim = c(-0.4,2))
i1
# Save plot
ggsave(plot = i1, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_001_106.pdf",
device = "pdf",
width = 30, height = 5, units = "in", dpi = 450)
ggsave(plot = i1, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_001_106.png",
device = "png",
width = 30, height = 5, units = "in", dpi = 450)
# Second part of graph
i2 <- ggplot(data = temp[95:nrow(temp), ]) +
geom_vline(xintercept = unname(quantile(temp$delta)[2]),
lty = 2) +
geom_vline(xintercept = median(temp$delta),
lty = 2, color = "blue") +
geom_vline(xintercept = unname(quantile(temp$delta)[4]),
lty = 2) +
geom_point(data = temp[95:nrow(temp), ], aes(x = delta,
y = as.factor(Construct)),
size = 4, shape = 21,
fill = "white", stroke = 1.5) +
geom_point(data = temp[temp$Construct == "201", ], aes(x = delta,
y = as.factor(Construct)),
size = 4, shape = 21,
fill = "white", color = "blue", stroke = 1.5) +
geom_errorbar(data = temp[95:nrow(temp), ], aes(x = delta,
y = as.factor(Construct),
xmin = delta - sd_delta,
xmax = delta + sd_delta), width = 0.2) +
geom_errorbar(data = temp[temp$Construct == "201", ], aes(x = delta,
y = as.factor(Construct),
xmin = delta - sd_delta,
xmax = delta + sd_delta), width = 0.2, color = "blue") +
labs(x = expression(Delta * FRET [1.5 * " M - " * 0 * " M"]),
y = "IDR") +
theme_bw() +
theme(axis.title = element_text(size = 14),
axis.text = element_text(size = 12),
axis.text.x = element_text(angle = 90, vjust = 0.5),
panel.grid = element_blank()) +
coord_flip(xlim = c(-0.4,2))
i2
# Merge plots
b <- i1  / i2
b
# Save merge plots
ggsave(plot = b, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_merged.png",
device = "png",
width = 30, height = 10, units = "in", dpi = 450)
ggsave(plot= b, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_merged.pdf",
device = "pdf", width = 30, height = 10, units = "in", dpi = 450)
# Save plot
ggsave(plot = i2, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_107_201.pdf",
device = "pdf",
width = 30, height = 5, units = "in", dpi = 450)
ggsave(plot = i2, filename = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/FIG1/all_biosensors_107_201.png",
device = "png",
width = 30, height = 5, units = "in", dpi = 450)
# Load data
temp <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_200.csv",
header = TRUE)
# Remove columns
temp <- temp[, c(1:3)]
# Add values of SED1
temp[189, ] <- c(201, 0.4463541487, 0.04946139798)
# Load data
temp <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Remove columns
temp <- temp[, c(1:3)]
# Load data (contains the 200 IDRs with sparrow values)
df1_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/IDRBS_library_sparrow_200.csv",
header = TRUE)
# Load data (contains the isoelectric point)
df2_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/Extended_fig1_data.csv",
header = TRUE)
# Load data (contains the 188 IDRs needed for the analysis)
df3_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Load data (contains the 200 IDRs with delta and response values)
df_library <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/all_biosensors.csv",
header = TRUE)
# Load data (contains the region plot from CIDER phase diagram)
df_regions <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/Library_regionplot.csv",
header = TRUE)
# Filter data to obtain the 188 IDRs needed for the analysis
df_library1 <- df_library[as.integer(substr(df_library$Construct, 7, 9)) %in% df3_sparrow$Construct, ]
df_library1$mean_delta
View(df_library)
View(df1_sparrow)
View(df3_sparrow)
View(df1_sparrow)
View(df3_sparrow)
View(df1_sparrow)
summary(df3_sparrow$delta)
summary(df3_sparrow$delta)
# Save quartiles (1st and 3rd)
i <- summary(df3_sparrow$delta)[[2]] # 1st
h <- summary(df3_sparrow$delta)[[5]] # 3rd
# Classify IDR by delta FRET response
temp_class <- ifelse(df3_sparrow$delta < i, yes = "Low",
no = ifelse(df3_sparrow$delta > h, yes = "High", no = "Medium"))
# Add the response column to df_library data set
df3_sparrow$Response <- temp_class
View(df3_sparrow)
# Load data (contains the 200 IDRs with sparrow values)
df_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
summary(df_sparrow$delta)[[2]]
summary(df_sparrow$delta)[[5]]
# Save quartiles (1st and 3rd)
i <- summary(df_sparrow$delta)[[2]] # 1st
h <- summary(df_sparrow$delta)[[5]] # 3rd
# Classify IDR by delta FRET response
temp_class <- ifelse(df_sparrow$delta < i, yes = "Low",
no = ifelse(df_sparrow$delta > h, yes = "High", no = "Medium"))
# Add the response column to df_library data set
df_library$Response <- temp_class
# Load data (contains the 200 IDRs with sparrow values)
df_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Save quartiles (1st and 3rd)
i <- summary(df_sparrow$delta)[[2]] # 1st
h <- summary(df_sparrow$delta)[[5]] # 3rd
# Classify IDR by delta FRET response
temp_class <- ifelse(df_sparrow$delta < i, yes = "Low",
no = ifelse(df_sparrow$delta > h, yes = "High", no = "Medium"))
# Add the response column to df_library data set
df_sparrow$Response <- temp_class
# Save file with 188 IDRs
write.csv(x = df_library, file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
quote = FALSE, row.names = FALSE)
# Load data (contains the 200 IDRs with sparrow values)
df_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Save quartiles (1st and 3rd)
i <- summary(df_sparrow$delta)[[2]] # 1st
h <- summary(df_sparrow$delta)[[5]] # 3rd
# Classify IDR by delta FRET response
temp_class <- ifelse(df_sparrow$delta < i, yes = "Low",
no = ifelse(df_sparrow$delta > h, yes = "High", no = "Medium"))
# Add the response column to df_library data set
df_sparrow$Response <- temp_class
# Save file with 188 IDRs
write.csv(x = df_sparrow, file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
quote = FALSE, row.names = FALSE)
# Load data (contains the 200 IDRs with sparrow values)
df_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Save quartiles (1st and 3rd)
i <- summary(df_sparrow$delta)[[2]] # 1st
h <- summary(df_sparrow$delta)[[5]] # 3rd
# Load data (contains the 200 IDRs with sparrow values)
df_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Load data (contains the 200 IDRs with sparrow values)
df1_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/IDRBS_library_sparrow_200.csv",
header = TRUE)
# Load data (contains the isoelectric point)
df2_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/Extended_fig1_data.csv",
header = TRUE)
# Load data (contains the 188 IDRs needed for the analysis)
df3_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Load data (contains the 200 IDRs with delta and response values)
df_library <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/all_biosensors.csv",
header = TRUE)
# Load data (contains the region plot from CIDER phase diagram)
df_regions <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/Library_regionplot.csv",
header = TRUE)
# Save quartiles (1st and 3rd)
i <- summary(df_library$mean_delta)[[2]] # 1st
h <- summary(df_library$mean_delta)[[5]] # 3rd
# Classify IDR by delta FRET response
temp_class <- ifelse(df_library$mean_delta < i, yes = "Low",
no = ifelse(df_library$mean_delta > h, yes = "High", no = "Medium"))
# Add the response column to df_library data set
df_library$Response <- temp_class
# Remove LEA4-5 (IDRBS-201)
df_library <- df_library[!df_library$construct == 201, ]
# Add data from df1_sparrow to df_library
df_library <- cbind(df_library, df1_sparrow)
# Arrange columns
df_library <- df_library[, c(5, 2:4, 6:ncol(df_library))]
# Rename columns
names(df_library)[2] <- "delta"
# Add isolectric point to df_library
df_library$pI <- df2_sparrow$pI
# Add CIDER region to df_library
df_library$Plot_region <- df_regions$Plot.region
# Save file with 200 IDRs
write.csv(x = df_library, file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_200.csv",
quote = FALSE, row.names = FALSE)
# Filter data to obtain the 188 IDRs needed for the analysis
df_library <- df_library[as.integer(substr(df_library$Construct, 7, 9)) %in% df3_sparrow$Construct, ]
# Save file with 188 IDRs
write.csv(x = df_library, file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
quote = FALSE, row.names = FALSE)
# Load data (contains the 200 IDRs with sparrow values)
df_sparrow <- read.csv(file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
header = TRUE)
# Save quartiles (1st and 3rd)
i <- summary(df_sparrow$delta)[[2]] # 1st
h <- summary(df_sparrow$delta)[[5]] # 3rd
# Classify IDR by delta FRET response
temp_class <- ifelse(df_sparrow$delta < i, yes = "Low",
no = ifelse(df_sparrow$delta > h, yes = "High", no = "Medium"))
# Add the response column to df_library data set
df_sparrow$Response <- temp_class
# Save file with 188 IDRs
write.csv(x = df_sparrow, file = "C:/Users/Cesar/OneDrive/Escritorio/Ext.Fig1/DATA/ARTICLE/IDRBS_library_sparrow_188.csv",
quote = FALSE, row.names = FALSE)
